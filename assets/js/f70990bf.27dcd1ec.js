"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1654],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),m=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=m(r),p=o,d=f["".concat(s,".").concat(p)]||f[p]||u[p]||a;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[f]="string"==typeof e?e:o,i[1]=l;for(var m=2;m<a;m++)i[m]=r[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4043:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:3,id:"formatHex",title:"formatHex",sidebar_label:"formatHex"},i=void 0,l={unversionedId:"format/formatHex",id:"format/formatHex",title:"formatHex",description:'The formatHex() function Formats a hexadecimal color code string by adding a "#" prefix if it\'s missing and expanding short-form hex codes to long-form.',source:"@site/docs/format/formatHex.md",sourceDirName:"format",slug:"/format/formatHex",permalink:"/utils-core/docs/format/formatHex",draft:!1,editUrl:"https://github.com/dev-pengi/utils-core/tree/main/docs/format/formatHex.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"formatHex",title:"formatHex",sidebar_label:"formatHex"},sidebar:"tutorialSidebar",previous:{title:"shorten",permalink:"/utils-core/docs/format/shorten"},next:{title:"validateHex",permalink:"/utils-core/docs/format/validateHex"}},s={},m=[{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Throws",id:"throws",level:3},{value:"Example",id:"example",level:3}],c={toc:m},f="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(f,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"formatHex()"),' function Formats a hexadecimal color code string by adding a "#" prefix if it\'s missing and expanding short-form hex codes to long-form.'),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"hex")," (",(0,o.kt)("inlineCode",{parentName:"li"},"String"),"): The input hexadecimal color code to be formatted."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"alt")," (",(0,o.kt)("inlineCode",{parentName:"li"},"String"),"): The default color code to use if ",(0,o.kt)("inlineCode",{parentName:"li"},"hex")," is invalid, set to ",(0,o.kt)("inlineCode",{parentName:"li"},"#000000")," by default.")),(0,o.kt)("h3",{id:"returns"},"Returns"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"String"),": The formatted color code")),(0,o.kt)("h3",{id:"throws"},"Throws"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Error"),": If ",(0,o.kt)("inlineCode",{parentName:"li"},"hex")," is not a string or ",(0,o.kt)("inlineCode",{parentName:"li"},"alt")," is not a string")),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const utils = require(\'utils-core.js\');\nconst hex = "f00";\nconst formattedHex = utils.format.formatHex(hex);\nconsole.log(formattedHex); \n// output: "#ff0000"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const utils = require(\'utils-core.js\');\nconst hex = "00ff00";\nconst formattedHex = utils.format.formatHex(hex, "#000000");\nconsole.log(formattedHex); \n// output: "#00ff00"\n')))}u.isMDXComponent=!0}}]);