"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9608],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=m(n),d=i,k=c["".concat(s,".").concat(d)]||c[d]||p[d]||o;return n?r.createElement(k,a(a({ref:t},u),{},{components:n})):r.createElement(k,a({ref:t},u))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,a[1]=l;for(var m=2;m<o;m++)a[m]=n[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2953:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:2,id:"MsToString",title:"MsToString",sidebar_label:"MsToString"},a=void 0,l={unversionedId:"time/MsToString",id:"time/MsToString",title:"MsToString",description:"The MsToString() function converts a number of milliseconds to a human readable time string.",source:"@site/docs/time/MsToString.md",sourceDirName:"time",slug:"/time/MsToString",permalink:"/utils-core-docs/docs/time/MsToString",draft:!1,editUrl:"https://github.com/dev-pengi/utils-core-docs/tree/main/docs/time/MsToString.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"MsToString",title:"MsToString",sidebar_label:"MsToString"},sidebar:"tutorialSidebar",previous:{title:"StringToMs",permalink:"/utils-core-docs/docs/time/StringToMs"},next:{title:"theNextDayOn",permalink:"/utils-core-docs/docs/time/theNextDayOn"}},s={},m=[{value:"Parameters",id:"parameters",level:3},{value:"Time units:",id:"time-units",level:3},{value:"Returns",id:"returns",level:3},{value:"Throws",id:"throws",level:3},{value:"Examples",id:"examples",level:3}],u={toc:m},c="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"MsToString()")," function converts a number of milliseconds to a human readable time string."),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"milliseconds")," (",(0,i.kt)("inlineCode",{parentName:"li"},"Number"),"): The number of milliseconds to convert"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"seperator")," (",(0,i.kt)("inlineCode",{parentName:"li"},"String"),"): Seperates between units. set to ",(0,i.kt)("inlineCode",{parentName:"li"},"' ,'")," by default")),(0,i.kt)("h3",{id:"time-units"},"Time units:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"s"),": second"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"m"),": minute"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"h"),": hour"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"d"),": day"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"w"),": week"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mo"),": month"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"y"),": year")),(0,i.kt)("h3",{id:"returns"},"Returns"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"String"),": The time string")),(0,i.kt)("h3",{id:"throws"},"Throws"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Error"),": If the input is not a number or is invalid")),(0,i.kt)("h3",{id:"examples"},"Examples"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Using the default seperator:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const utils = require('utils-core.js');\nconst msTime = 12345;\nconst convertedTime = utils.time.MsToString(msTime);\n//Output: '1m'\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const utils = require('utils-core.js');\nconst msTime = 60000;\nconst convertedTime = utils.time.MsToString(msTime);\n//Output: '1m'\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Using custom timeStamp: (",(0,i.kt)("inlineCode",{parentName:"p"},"April 4th, 2022 at 12:00:00 AM UTC"),")")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const utils = require('utils-core.js');\nconst msTime = 1649164800000;\nconst convertedTime = utils.time.MsToString(msTime);\n//Output: '2mo, 2w, 3d, 12h, 30m, 23s'\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Using custom seperator:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const utils = require('utils-core.js');\nconst msTime = 1649164800000;\nconst convertedTime = utils.time.MsToString(msTime, ' : ');\n//Output: '2mo : 2w : 3d : 12h : 30m : 23s'\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const utils = require('utils-core.js');\nconst msTime = 1649164800000;\nconst convertedTime = utils.time.MsToString(msTime, ' and ');\n//Output: '2mo and 2w and 3d and 12h and 30m and 23s'\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"ms less than 1000:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const utils = require('utils-core.js');\nconst msTime = 500;\nconst convertedTime = utils.time.MsToString(msTime);\n//Output: '0.5s'\n")))}p.isMDXComponent=!0}}]);