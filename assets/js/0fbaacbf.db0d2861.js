"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2891],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),c=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(m.Provider,{value:t},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,m=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,b=p["".concat(m,".").concat(d)]||p[d]||s[d]||l;return n?r.createElement(b,i(i({ref:t},u),{},{components:n})):r.createElement(b,i({ref:t},u))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3469:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:2,id:"clamp",title:"clamp",sidebar_label:"clamp"},i=void 0,o={unversionedId:"math/clamp",id:"math/clamp",title:"clamp",description:"The clamp() function clamps a value between a minimum and maximum value.",source:"@site/docs/math/clamp.md",sourceDirName:"math",slug:"/math/clamp",permalink:"/utils-core-docs/docs/math/clamp",draft:!1,editUrl:"https://github.com/dev-pengi/utils-core-docs/tree/main/docs/math/clamp.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"clamp",title:"clamp",sidebar_label:"clamp"},sidebar:"tutorialSidebar",previous:{title:"calculateProgress",permalink:"/utils-core-docs/docs/math/calculateProgress"},next:{title:"getAverage",permalink:"/utils-core-docs/docs/math/getAverage"}},m={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Throws",id:"throws",level:3},{value:"Example",id:"example",level:3}],u={toc:c},p="wrapper";function s(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"clamp()")," function clamps a value between a minimum and maximum value."),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"value")," - (",(0,a.kt)("inlineCode",{parentName:"li"},"Number"),"): The value to be clamped."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"min")," - (",(0,a.kt)("inlineCode",{parentName:"li"},"Number"),"): The minimum value that ",(0,a.kt)("strong",{parentName:"li"},"value")," can be."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"max")," - (",(0,a.kt)("inlineCode",{parentName:"li"},"Number"),"): The maximum value that ",(0,a.kt)("strong",{parentName:"li"},"value")," can be.")),(0,a.kt)("h3",{id:"returns"},"Returns"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Number"),": The clamped value")),(0,a.kt)("h3",{id:"throws"},"Throws"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Error"),": Will throw an error if ",(0,a.kt)("strong",{parentName:"li"},"value"),", ",(0,a.kt)("strong",{parentName:"li"},"min"),", or ",(0,a.kt)("strong",{parentName:"li"},"max")," is not a number.")),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"at velue that is less than ",(0,a.kt)("strong",{parentName:"p"},"min"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const utils = require('utils-core.js');\nconst current = 5;\nconst min = 10;\nconst max = 50;\nconst clampedValue = utils.math.clamp(current, min, max);\nconsole.log(clampedValue);\n//output: 10\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"at velue that is greater than ",(0,a.kt)("strong",{parentName:"p"},"max"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const utils = require('utils-core.js');\nconst current = 100;\nconst min = 10;\nconst max = 50;\nconst clampedValue = utils.math.clamp(current, min, max);\nconsole.log(clampedValue);\n//output: 50\n")))}s.isMDXComponent=!0}}]);