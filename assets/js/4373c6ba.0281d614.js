"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2947],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),b=r,f=d["".concat(i,".").concat(b)]||d[b]||p[b]||o;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=b;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},487:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:1,id:"flatten",title:"flatten",sidebar_label:"flatten"},l=void 0,s={unversionedId:"objects/flatten",id:"objects/flatten",title:"flatten",description:"The flattenObject() function flattens an object with nested properties into a flat object with path keys",source:"@site/docs/objects/flatten.md",sourceDirName:"objects",slug:"/objects/flatten",permalink:"/docs/objects/flatten",draft:!1,editUrl:"https://github.com/dev-pengi/utils-core-docs/tree/main/docs/objects/flatten.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"flatten",title:"flatten",sidebar_label:"flatten"},sidebar:"tutorialSidebar",previous:{title:"Object utils",permalink:"/docs/category/object-utils"},next:{title:"merge",permalink:"/docs/objects/merge"}},i={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Throws",id:"throws",level:3},{value:"Examples",id:"examples",level:3}],u={toc:c},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"flattenObject()")," function flattens an object with nested properties into a flat object with path keys"),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"obj"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:null},"The object to flatten")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"prefix"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The prefix to use for the path keys. Default ",(0,r.kt)("inlineCode",{parentName:"td"},'""'))))),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Object"),": The flattened object")),(0,r.kt)("h3",{id:"throws"},"Throws"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Error"),": If the input is not an object")),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Simple object with no nested properties:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const utils = require(\'utils-core.js\');\n\nconst obj = {\n  name: "sif",\n  age: 30,\n  city: "New York"\n};\n\nconst flattenedObj = utils.objects.flattenObject(obj);\nconsole.log(flattenedObj);\n// Output: {\n//   "name": "sif",\n//   "age": 30,\n//   "city": "New York"\n// }\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Object with nested properties:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const utils = require(\'utils-core.js\');\nconst obj = {\n  name: "sif",\n  age: 30,\n  address: {\n    street: "456 Main St",\n    city: "New York",\n    state: "NY"\n  }\n};\n\nconst flattenedObj = utils.objects.flattenObject(obj);\nconsole.log(flattenedObj);\n// Output: {\n//   "name": "sif",\n//   "age": 30,\n//   "address.street": "456 Main St",\n//   "address.city": "New York",\n//   "address.state": "NY"\n// }\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Object with arrays:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const utils = require(\'utils-core.js\');\n\nconst obj = {\n  name: "sif",\n  age: 30,\n  hobbies: ["reading", "running", "coding"],\n  address: {\n    street: "456 Main St",\n    city: "New York",\n    state: "NY"\n  }\n};\n\nconst flattenedObj = utils.objects.flattenObject(obj);\nconsole.log(flattenedObj);\n// Output:\n// {\n//   "name": "sif",\n//   "age": 30,\n//   "hobbies.0": "reading",\n//   "hobbies.1": "running",\n//   "hobbies.2": "coding",\n//   "address.street": "456 Main St",\n//   "address.city": "New York",\n//   "address.state": "NY"\n// }\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Object with null or undefined values:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const utils = require(\'utils-core.js\');\n\nconst obj = {\n  name: "sif",\n  age: null,\n  address: {\n    street: "456 Main St",\n    city: null,\n    state: "NY"\n  }\n};\n\nconst flattenedObj = utils.objects.flattenObject(obj);\nconsole.log(flattenedObj);\n// Output: {\n//   "name": "sif",\n//   "age": null,\n//   "address.street": "456 Main St",\n//   "address.city": null,\n//   "address.state": "NY"\n// }\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Object with all ofthe above")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const utils = require(\'utils-core.js\');\n\nconst obj = {\n  name: "sif",\n  age: 30,\n  hobbies: ["reading", "running", "coding"],\n  address: {\n    street: "456 Main St",\n    city: null,\n    state: "NY"\n  },\n  contact: {\n    email: "sif@sifedine.lol",\n    phone: {\n      home: "555-4564",\n      work: "555-5678"\n    }\n  },\n  isMarried: false,\n  spouse: undefined,\n  notes: {\n    first: "Likes to read mystery novels",\n    second: "Runs 5 miles every day"\n  }\n};\n\nconst flattenedObj = utils.objects.flattenObject(obj);\nconsole.log(flattenedObj);\n// Output:\n// {\n//   "name": "sif",\n//   "age": 30,\n//   "hobbies.0": "reading",\n//   "hobbies.1": "running",\n//   "hobbies.2": "coding",\n//   "address.street": "456 Main St",\n//   "address.city": null,\n//   "address.state": "NY",\n//   "contact.email": "sif@sifedine.lol",\n//   "contact.phone.home": "555-4564",\n//   "contact.phone.work": "555-5678",\n//   "isMarried": false,\n//   "spouse": undefined,\n//   "notes.first": "Likes to read mystery novels",\n//   "notes.second": "Runs 5 miles every day"\n// }\n')))}p.isMDXComponent=!0}}]);