"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[883],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=i,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3221:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const a={sidebar_position:6,id:"isPalindrome",title:"isPalindrome",sidebar_label:"isPalindrome"},o=void 0,l={unversionedId:"format/isPalindrome",id:"format/isPalindrome",title:"isPalindrome",description:"The isPalindrome() function determines whether a string is a palindrome (the string is the same whether it's normal or reversed).",source:"@site/docs/format/isPalindrome.md",sourceDirName:"format",slug:"/format/isPalindrome",permalink:"/utils-core-docs/docs/format/isPalindrome",draft:!1,editUrl:"https://github.com/dev-pengi/utils-core-docs/tree/main/docs/format/isPalindrome.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,id:"isPalindrome",title:"isPalindrome",sidebar_label:"isPalindrome"},sidebar:"tutorialSidebar",previous:{title:"reverseString",permalink:"/utils-core-docs/docs/format/reverseString"},next:{title:"capitalize",permalink:"/utils-core-docs/docs/format/capitalize"}},s={},c=[{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Throws",id:"throws",level:3},{value:"Example",id:"example",level:3}],u={toc:c},m="wrapper";function p(e){let{components:t,...r}=e;return(0,i.kt)(m,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"isPalindrome()")," function determines whether a string is a palindrome ",(0,i.kt)("strong",{parentName:"p"},"(the string is the same whether it's normal or reversed)"),"."),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"str")," (",(0,i.kt)("inlineCode",{parentName:"li"},"String"),"): The string to check")),(0,i.kt)("h3",{id:"returns"},"Returns"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Boolean"),": True if the string is a palindrome, false otherwise")),(0,i.kt)("h3",{id:"throws"},"Throws"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Error"),":")),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const utils = require('utils-core.js');\nconst str = 'racecar';\nconst check = utils.format.isPalindrome(str);\nconsole.log(check);\n//Output: true\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const utils = require('utils-core.js');\nconst str = 'Was it a car or a cat i saw?';\nconst check = utils.format.isPalindrome(str);\nconsole.log(check);\n//Output: true\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const utils = require('utils-core.js');\nconst str = 'not a palindrome';\nconst check = utils.format.isPalindrome(str);\nconsole.log(check);\n//Output: false\n")))}p.isMDXComponent=!0}}]);